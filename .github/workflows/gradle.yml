# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on: # 워크플로를 언제 실행할지를 정의
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: # 워크플로의 권한을 설정
  contents: read # 코드 리포지토리의 내용을 읽기 권한을 부여
  checks: write # 워크플로 결과를 체크하기 위한 쓰기 권한을 부여

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    # JDK 11 install
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    # Gradle Wrapper 스크립트를 실행하기 위한 permission 획득
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew

    # gradle build
    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Upload JSON file
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws --endpoint-url=https://kr.object.ncloudstorage.com s3 cp /src/main/resources/*.json s3://rehab/json
    
    - name: 테스트 결과를 PR에 코멘트로 등록합니다
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: '**/build/test-results/test/TEST-*.xml'

    - name: 테스트 실패 시, 실패한 코드 라인에 Check 코멘트를 등록합니다
      uses: mikepenz/action-junit-report@v3
      if: always()
      with:
        report_paths: '**/build/test-results/test/TEST-*.xml'
        token: ${{ github.token }}
