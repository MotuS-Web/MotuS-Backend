name: Build and Deploy Server to AWS EC2

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_NAME: motus_project
  BUCKET_NAME: motus-buket
  AWS_REGION: ap-northeast-2
  CODE_DEPLOY_APP_NAME: motus_CICD
  DEPLOYMENT_GROUP_NAME: motus_CICD_group
#  GITHUB_SHA: 8b49819811ccdd9aa265d4a29ac87298d2a046ba

permissions: # 워크플로의 권한을 설정
  contents: read # 코드 리포지토리의 내용을 읽기 권한을 부여
  checks: write # 워크플로 결과를 체크하기 위한 쓰기 권한을 부여


jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # JDK 11 install
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Gradle Wrapper 스크립트를 실행하기 위한 permission 획득
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      # gradle build
      - name: Build with Gradle
        run:  | 
            ./gradlew build -x test
            ls
            pwd

      - name: 테스트 결과를 PR에 코멘트로 등록합니다
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      - name: 테스트 실패 시, 실패한 코드 라인에 Check 코멘트를 등록합니다
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}

      - name: Make Zip File
        run: |
          ls
          cd ./build
          zip -qq -r $GITHUB_SHA.zip . 
          pwd
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY}}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload Zip File to S3
        run: |
          ls
          pwd
          cd ./build
          pwd
          ls
          aws s3 cp --region $AWS_REGION ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy to EC2
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip